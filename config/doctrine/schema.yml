DmUser:
  actAs:
    Timestampable:
  columns:
    country_id:         { type: integer }
    first_name:         { type: string(255) }
    last_name:          { type: string(255) }
    profession:         { type: string(1000) }
    postal_code:        { type: string(6) }
    street:             { type: string(1000) }
    city:               { type: string(255) }
    is_letter_actu:     { type: boolean }
    is_letter_action:   { type: boolean }
    photo_id:           { type: integer }
  relations:
    Country:
      local:            country_id
      foreignAlias:     Users
      onDelete:         SET NULL
    Photo:
      class:            DmMedia
      local:            photo_id
      foreignAlias:     Users
      onDelete:         RESTRICT

Country:
  columns:
    name:               { type: string(255), notnull: true, unique: true }

Petition:
  actAs:
    Timestampable:
    DmTaggable:
    DmVersionable:
  columns:
    title:              { type: string(255), notnull: true, unique: true }
    text:               { type: clob, extra: markdown }
    slogan:             { type: string(500), notnull: true }
    is_active:          { type: boolean, notnull: true, default: false }
    actu_page_url:      { type: string(255), notnull: true, extra: link }
    actu_feed_url:      { type: string(255), notnull: true, extra: link }
    facebook_page_url:  { type: string(255), notnull: true, default: "http://www.facebook.com/association.agirpourlenvironnement", extra: link }
    twitter_page_url:   { type: string(255), notnull: true, default: "http://twitter.com/APEnvironnement", extra: link }
    communique_page_url: { type: string(255), notnull: false, extra: link }
    communique_feed_url: { type: string(255), notnull: false, extra: link }
  relations:
    Signatories:
      class:            DmUser
      refClass:         Signature
      local:            petition_id
      foreign:          dm_user_id
      foreignAlias:     SignedPetitions

# A collection is a page where a user promotes
# a petition and collects signatures for it
Collection:
  actAs:
    Timestampable:
    DmVersionable:
  columns:
    dm_user_id:         { type: integer, notnull: true }
    petition_id:        { type: integer, notnull: true }
    title:              { type: string(255), notnull: true }
    text:               { type: clob }
    goal:               { type: integer, notnull: true, default: 50, unsigned: true }
    hash_code:          { type: string(8), notnull: true, unique: true }
  relations:
    User:
      class:            DmUser
      local:            dm_user_id
      foreignAlias:     Collections
      onDelete:         RESTRICT
    Petition:
      class:            Petition
      local:            petition_id
      foreignAlias:     Collections
      onDelete:         RESTRICT

Signature:
  actAs:
    Timestampable:
      updated:
        disabled: true
  columns:
    dm_user_id:         { type: integer, notnull: true }
    petition_id:        { type: integer, notnull: true }
    collection_id:      { type: integer, notnull: false } # came from this collection
  indexes:
    user_signed_petition:
      fields:           [dm_user_id, petition_id]
      unique:           true
  relations:
    User:
      class:            DmUser
      local:            dm_user_id
      onDelete:         CASCADE
    Petition:
      class:            Petition
      local:            petition_id
      onDelete:         CASCADE
    Collection:
      class:            Collection
      local:            collection_id
      onDelete:         SET NULL

Action:
  actAs:
    Timestampable:
    DmVersionable:
  columns:
    petition_id:        { type: integer, notnull: true }
    title:              { type: string(255), notnull: true }
    text:               { type: clob, extra: markdown }
    begin_at:           { type: timestamp } # echeance du timer
    goal:               { type: integer, notnull: true, default: 50, unsigned: true }
    is_active:          { type: boolean, notnull: true, default: false }
  indexes:
    petition_title:
      fields:           [petition_id, title]
      type:             unique
  relations:
    Petition:
      class:            Petition
      local:            petition_id
      onDelete:         CASCADE

Partner:
  actAs:
    Timestampable:
    DmVersionable:
  columns:
    title:              { type: string(255), notnull: true, unique: true }
    url:                { type: string(255), extra: link }
    image_id:           { type: integer } # prévoir image par défaut
    is_active:          { type: boolean, notnull: true, default: false }
  relations:
    Petitions:
      class:            Petition
      refClass:         PartnerPetition
      local:            partner_id
      foreign:          petition_id
      foreignAlias:     Partners
    Image:
      class:            DmMedia
      local:            image_id
      foreignAlias:     Partners
      onDelete:         RESTRICT

PartnerPetition:
  columns:
    partner_id:         { type: integer, primary: true }
    petition_id:        { type: integer, primary: true }
  relations:
    Partner:
      class:            Partner
      local:            partner_id
      onDelete:         CASCADE
    Petition:
      class:            Petition
      local:            petition_id
      onDelete:         CASCADE

Product:
  actAs:
    Timestampable:
    DmVersionable:
  columns:
    title:              { type: string(255), notnull: true, unique: true }
    url:                { type: string(255), notnull: true, extra: link  }
    image_id:           { type: integer } # prévoir image par défaut
    text:               { type: string(500) }
    is_active:          { type: boolean, notnull: true, default: false }
  relations:
    Petitions:
      class:            Petition
      refClass:         ProductPetition
      local:            product_id
      foreign:          petition_id
      foreignAlias:     Products
    Image:
      class:            DmMedia
      local:            image_id
      foreignAlias:     Products
      onDelete:         RESTRICT

ProductPetition:
  columns:
    petition_id:        { type: integer, primary: true }
    product_id:         { type: integer, primary: true }
  relations:
    Product:
      class:            Product
      local:            product_id
      onDelete:         CASCADE
    Petition:
      class:            Petition
      local:            petition_id
      onDelete:         CASCADE

Citation:
  actAs:
    Timestampable:
    DmVersionable:
  columns:
    text:               { type: clob, extra: markdown, notnull: true }
    source:             { type: clob, extra: markdown, notnull: true }
    is_active:          { type: boolean, notnull: true, default: false }

DmContact:
  columns:
    petition_id:        { type: integer }
  relations:
    Petition:
      class:            Petition
      local:            petition_id
      onDelete:         SET NULL
      foreignAlias:     Contacts