<?php

/**
 * BasePetition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $text
 * @property string $slogan
 * @property boolean $is_active
 * @property string $url_feed_actu
 * @property string $url_feed_communique
 * @property Doctrine_Collection $Signatories
 * @property Doctrine_Collection $Collectes
 * @property Doctrine_Collection $Signature
 * @property Doctrine_Collection $Action
 * @property Doctrine_Collection $Partenaires
 * @property Doctrine_Collection $PartenairePetition
 * @property Doctrine_Collection $Produits
 * @property Doctrine_Collection $ProduitPetition
 * 
 * @method string              getTitle()               Returns the current record's "title" value
 * @method clob                getText()                Returns the current record's "text" value
 * @method string              getSlogan()              Returns the current record's "slogan" value
 * @method boolean             getIsActive()            Returns the current record's "is_active" value
 * @method string              getUrlFeedActu()         Returns the current record's "url_feed_actu" value
 * @method string              getUrlFeedCommunique()   Returns the current record's "url_feed_communique" value
 * @method Doctrine_Collection getSignatories()         Returns the current record's "Signatories" collection
 * @method Doctrine_Collection getCollectes()           Returns the current record's "Collectes" collection
 * @method Doctrine_Collection getSignature()           Returns the current record's "Signature" collection
 * @method Doctrine_Collection getAction()              Returns the current record's "Action" collection
 * @method Doctrine_Collection getPartenaires()         Returns the current record's "Partenaires" collection
 * @method Doctrine_Collection getPartenairePetition()  Returns the current record's "PartenairePetition" collection
 * @method Doctrine_Collection getProduits()            Returns the current record's "Produits" collection
 * @method Doctrine_Collection getProduitPetition()     Returns the current record's "ProduitPetition" collection
 * @method Petition            setTitle()               Sets the current record's "title" value
 * @method Petition            setText()                Sets the current record's "text" value
 * @method Petition            setSlogan()              Sets the current record's "slogan" value
 * @method Petition            setIsActive()            Sets the current record's "is_active" value
 * @method Petition            setUrlFeedActu()         Sets the current record's "url_feed_actu" value
 * @method Petition            setUrlFeedCommunique()   Sets the current record's "url_feed_communique" value
 * @method Petition            setSignatories()         Sets the current record's "Signatories" collection
 * @method Petition            setCollectes()           Sets the current record's "Collectes" collection
 * @method Petition            setSignature()           Sets the current record's "Signature" collection
 * @method Petition            setAction()              Sets the current record's "Action" collection
 * @method Petition            setPartenaires()         Sets the current record's "Partenaires" collection
 * @method Petition            setPartenairePetition()  Sets the current record's "PartenairePetition" collection
 * @method Petition            setProduits()            Sets the current record's "Produits" collection
 * @method Petition            setProduitPetition()     Sets the current record's "ProduitPetition" collection
 * 
 * @package    ape-petition
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7200 2010-02-21 09:37:37Z beberlei $
 */
abstract class BasePetition extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('petition');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => '255',
             ));
        $this->hasColumn('text', 'clob', null, array(
             'type' => 'clob',
             'extra' => 'markdown',
             ));
        $this->hasColumn('slogan', 'string', 500, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '500',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('url_feed_actu', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'extra' => 'link',
             'length' => '255',
             ));
        $this->hasColumn('url_feed_communique', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'extra' => 'link',
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('DmUser as Signatories', array(
             'refClass' => 'Signature',
             'local' => 'petition_id',
             'foreign' => 'dm_user_id'));

        $this->hasMany('Collecte as Collectes', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Signature', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Action', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Partenaire as Partenaires', array(
             'refClass' => 'PartenairePetition',
             'local' => 'petition_id',
             'foreign' => 'partenaire_id'));

        $this->hasMany('PartenairePetition', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Produit as Produits', array(
             'refClass' => 'ProduitPetition',
             'local' => 'petition_id',
             'foreign' => 'produit_id'));

        $this->hasMany('ProduitPetition', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $dmtaggable0 = new Doctrine_Template_DmTaggable();
        $dmversionable0 = new Doctrine_Template_DmVersionable();
        $this->actAs($timestampable0);
        $this->actAs($dmtaggable0);
        $this->actAs($dmversionable0);
    }
}