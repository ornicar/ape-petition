<?php

/**
 * BasePetition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property clob $text
 * @property string $slogan
 * @property boolean $is_active
 * @property string $url_feed_actu
 * @property string $url_feed_communique
 * @property Doctrine_Collection $Signatories
 * @property Doctrine_Collection $Collections
 * @property Doctrine_Collection $Signature
 * @property Doctrine_Collection $Action
 * @property Doctrine_Collection $Partners
 * @property Doctrine_Collection $PartnerPetition
 * @property Doctrine_Collection $Products
 * @property Doctrine_Collection $ProductPetition
 * 
 * @method string              getTitle()               Returns the current record's "title" value
 * @method clob                getText()                Returns the current record's "text" value
 * @method string              getSlogan()              Returns the current record's "slogan" value
 * @method boolean             getIsActive()            Returns the current record's "is_active" value
 * @method string              getUrlFeedActu()         Returns the current record's "url_feed_actu" value
 * @method string              getUrlFeedCommunique()   Returns the current record's "url_feed_communique" value
 * @method Doctrine_Collection getSignatories()         Returns the current record's "Signatories" collection
 * @method Doctrine_Collection getCollections()         Returns the current record's "Collections" collection
 * @method Doctrine_Collection getSignature()           Returns the current record's "Signature" collection
 * @method Doctrine_Collection getAction()              Returns the current record's "Action" collection
 * @method Doctrine_Collection getPartners()            Returns the current record's "Partners" collection
 * @method Doctrine_Collection getPartnerPetition()     Returns the current record's "PartnerPetition" collection
 * @method Doctrine_Collection getProducts()            Returns the current record's "Products" collection
 * @method Doctrine_Collection getProductPetition()     Returns the current record's "ProductPetition" collection
 * @method Petition            setTitle()               Sets the current record's "title" value
 * @method Petition            setText()                Sets the current record's "text" value
 * @method Petition            setSlogan()              Sets the current record's "slogan" value
 * @method Petition            setIsActive()            Sets the current record's "is_active" value
 * @method Petition            setUrlFeedActu()         Sets the current record's "url_feed_actu" value
 * @method Petition            setUrlFeedCommunique()   Sets the current record's "url_feed_communique" value
 * @method Petition            setSignatories()         Sets the current record's "Signatories" collection
 * @method Petition            setCollections()         Sets the current record's "Collections" collection
 * @method Petition            setSignature()           Sets the current record's "Signature" collection
 * @method Petition            setAction()              Sets the current record's "Action" collection
 * @method Petition            setPartners()            Sets the current record's "Partners" collection
 * @method Petition            setPartnerPetition()     Sets the current record's "PartnerPetition" collection
 * @method Petition            setProducts()            Sets the current record's "Products" collection
 * @method Petition            setProductPetition()     Sets the current record's "ProductPetition" collection
 * 
 * @package    ape-petition
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7294 2010-03-02 17:59:20Z jwage $
 */
abstract class BasePetition extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('petition');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => '255',
             ));
        $this->hasColumn('text', 'clob', null, array(
             'type' => 'clob',
             'extra' => 'markdown',
             ));
        $this->hasColumn('slogan', 'string', 500, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '500',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('url_feed_actu', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'extra' => 'link',
             'length' => '255',
             ));
        $this->hasColumn('url_feed_communique', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'extra' => 'link',
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('DmUser as Signatories', array(
             'refClass' => 'Signature',
             'local' => 'petition_id',
             'foreign' => 'dm_user_id'));

        $this->hasMany('Collection as Collections', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Signature', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Action', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Partner as Partners', array(
             'refClass' => 'PartnerPetition',
             'local' => 'petition_id',
             'foreign' => 'partner_id'));

        $this->hasMany('PartnerPetition', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $this->hasMany('Product as Products', array(
             'refClass' => 'ProductPetition',
             'local' => 'petition_id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductPetition', array(
             'local' => 'id',
             'foreign' => 'petition_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $dmtaggable0 = new Doctrine_Template_DmTaggable();
        $dmversionable0 = new Doctrine_Template_DmVersionable();
        $this->actAs($timestampable0);
        $this->actAs($dmtaggable0);
        $this->actAs($dmversionable0);
    }
}